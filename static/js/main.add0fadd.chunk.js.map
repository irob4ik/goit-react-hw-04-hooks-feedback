{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App.js","index.js","components/Feedback/feedback.module.css","container.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Section","title","children","Notification","message","Feedback","options","onLeaveFeedback","map","option","type","className","styles","feedBtn","onClick","App","useState","setGood","setNeutral","setBad","totalFeedback","useMemo","percentage","toFixed","container","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0NAGMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,SAKnCL,EAAWM,aAAe,CACtBD,mBAAoB,eAWTL,QCxBTO,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qCACI,6BAAKD,IACJC,MAKbF,EAAQD,aAAe,CACnBE,MAAO,gBAQID,QClBTG,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,4BAAIA,KAGRD,EAAaJ,aAAe,CACxBK,QAAS,qBAOED,Q,gBCMAE,EAfE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzB,OACI,mCACKD,EAAQE,KAAI,SAACC,GAAD,OACT,wBAAQC,KAAK,SAASC,UAAWC,IAAOC,QAAsBC,QAAS,kBAAMP,EAAgBE,IAA7F,SAAuGA,GAAjDA,S,gBCDvD,SAASM,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAGMC,EAAgBC,mBAAQ,WAC5B,OAAO3B,EAAOC,EAAUC,IACvB,CAACF,EAAMC,EAASC,IAEb0B,EAAaD,mBAAQ,WAEzB,OADe3B,EAAO0B,EAAiB,KAAKG,QAAQ,GAAK,MAExD,CAAC7B,EAAM0B,IAqBV,OACE,sBAAKT,UAAWC,IAAOY,UAAvB,UACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBK,QAjCP,CAAC,OAAQ,UAAW,OAiCKC,gBAtBnB,SAAAG,GACpB,OAAQA,GACN,IAAK,OACHO,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAUF,cAAC,EAAD,CAASxB,MAAM,aAAf,SACqB,IAAlBmB,EACC,cAAC,EAAD,CAAchB,QAAQ,sBACtB,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,EACPtB,mBAAoBwB,SCnDhCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,4B,kBCA5BD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.add0fadd.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n    positivePercentage: 'uncountable',\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.string,\r\n}\r\n    \r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <h1>{title}</h1>\r\n            {children}\r\n        </>\r\n    );\r\n}\r\n\r\nSection.defaultProps = {\r\n    title: \"Librakalibra\",\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n    \r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nNotification.defaultProps = {\r\n    message: 'No feedback given',\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './feedback.module.css'\r\n\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            {options.map((option) => (\r\n                <button type=\"button\" className={styles.feedBtn} key={option} onClick={() => onLeaveFeedback(option)}>{option}</button>\r\n           ))} \r\n        </>\r\n    )\r\n};\r\n\r\nFeedback.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Feedback;","import { useState, useMemo } from 'react';\n\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport FeedbackOptions from './components/Feedback';\n\nimport styles from './container.module.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const options = ['good', 'neutral', 'bad'];\n\n  const totalFeedback = useMemo(() => {\n    return good + neutral + bad;\n  }, [good, neutral, bad]);\n\n  const percentage = useMemo(() => {\n    const calc = ((good / totalFeedback) * 100).toFixed(0) + \"%\";\n    return calc;\n  }, [good, totalFeedback]);\n\n  const increaseValue = type => {\n    switch (type) {\n      case 'good':\n        setGood(prevState => prevState + 1 );\n        break;\n      \n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      \n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      \n      default:\n        return;\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={increaseValue}/>\n      </Section>\n\n      <Section title=\"Statistics\">\n        {totalFeedback === 0 ?\n          <Notification message=\"No feedback given\" /> :            \n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={percentage}\n          />\n        }             \n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedBtn\":\"feedback_feedBtn__1sDsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__tLNTa\"};"],"sourceRoot":""}